/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DigitalNft,
  DigitalNftInterface,
} from "../../contracts/DigitalNft";

const _abi = [
  {
    inputs: [
      {
        internalType: "string[6]",
        name: "dogTokenUris",
        type: "string[6]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DigitalNft__AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "DigitalNft__InsufficientETHSent",
    type: "error",
  },
  {
    inputs: [],
    name: "DigitalNft__InvalidMintType",
    type: "error",
  },
  {
    inputs: [],
    name: "DigitalNft__InvalidTokenId",
    type: "error",
  },
  {
    inputs: [],
    name: "DigitalNft__NftAlreadyEvolved",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTEvolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "NFTMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "evolve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getDog",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "evolved",
            type: "bool",
          },
          {
            internalType: "enum DigitalNft.DogType",
            name: "dogType",
            type: "uint8",
          },
        ],
        internalType: "struct DigitalNft.Dog",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum DigitalNft.DogType",
        name: "dogType",
        type: "uint8",
      },
    ],
    name: "getDogTokenUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEvolvePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum DigitalNft.DogType",
        name: "dogType",
        type: "uint8",
      },
    ],
    name: "mintNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006008553480156200001657600080fd5b506040516200217038038062002170833981016040819052620000399162000333565b6040805180820182526007815266111a59da5d185b60ca1b6020808301918252835180850190945260038452621111d560ea1b908401528151919291620000839160009162000163565b5080516200009990600190602084019062000163565b505050620000b6620000b0620000c860201b60201c565b620000cc565b620000c1816200011e565b506200048d565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600f5460ff1615620001435760405163811ad95d60e01b815260040160405180910390fd5b620001526009826006620001f2565b5050600f805460ff19166001179055565b828054620001719062000450565b90600052602060002090601f016020900481019282620001955760008555620001e0565b82601f10620001b057805160ff1916838001178555620001e0565b82800160010185558215620001e0579182015b82811115620001e0578251825591602001919060010190620001c3565b50620001ee92915062000245565b5090565b826006810192821562000237579160200282015b828111156200023757825180516200022691849160209091019062000163565b509160200191906001019062000206565b50620001ee9291506200025c565b5b80821115620001ee576000815560010162000246565b80821115620001ee5760006200027382826200027d565b506001016200025c565b5080546200028b9062000450565b6000825580601f106200029c575050565b601f016020900490600052602060002090810190620002bc919062000245565b50565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715620002fa57620002fa620002bf565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200032b576200032b620002bf565b604052919050565b600060208083850312156200034757600080fd5b82516001600160401b03808211156200035f57600080fd5b8185019150601f86818401126200037557600080fd5b6200037f620002d5565b8060c08501898111156200039257600080fd5b855b818110156200044157805186811115620003ae5760008081fd5b87018581018c13620003c05760008081fd5b805187811115620003d557620003d5620002bf565b620003e8818801601f19168b0162000300565b8181528d8b838501011115620003fe5760008081fd5b60005b828110156200041e578381018c01518282018d01528b0162000401565b82811115620004305760008c84840101525b508652505092870192870162000394565b50909998505050505050505050565b600181811c908216806200046557607f821691505b602082108114156200048757634e487b7160e01b600052602260045260246000fd5b50919050565b611cd3806200049d6000396000f3fe6080604052600436106101105760003560e01c806301ffc9a71461011557806306fdde031461014a578063081812fc1461016c578063095ea7b31461019957806323b872dd146101bb57806342842e0e146101db5780636352211e146101fb5780636e02007d1461021b57806370a082311461023a578063715018a61461025a5780637c62e2a41461026f5780638b097d801461029c5780638da5cb5b146102bc57806395d89b41146102d1578063a22cb465146102e6578063a7f93ebd14610306578063b88d4fde14610320578063c87b56dd14610340578063e985e9c514610360578063eb077c4814610380578063f119f56714610393578063f2fde38b146103a6578063f9f81e09146103c6575b600080fd5b34801561012157600080fd5b50610135610130366004611714565b6103e0565b60405190151581526020015b60405180910390f35b34801561015657600080fd5b5061015f610432565b6040516101419190611789565b34801561017857600080fd5b5061018c61018736600461179c565b6104c4565b60405161014191906117b5565b3480156101a557600080fd5b506101b96101b43660046117e0565b6104eb565b005b3480156101c757600080fd5b506101b96101d636600461180a565b610606565b3480156101e757600080fd5b506101b96101f636600461180a565b610637565b34801561020757600080fd5b5061018c61021636600461179c565b610652565b34801561022757600080fd5b506008545b604051908152602001610141565b34801561024657600080fd5b5061022c610255366004611846565b610687565b34801561026657600080fd5b506101b961070d565b34801561027b57600080fd5b5061028f61028a36600461179c565b610721565b6040516101419190611877565b3480156102a857600080fd5b5061015f6102b73660046118b2565b610791565b3480156102c857600080fd5b5061018c610848565b3480156102dd57600080fd5b5061015f610857565b3480156102f257600080fd5b506101b96103013660046118d3565b610866565b34801561031257600080fd5b5066038d7ea4c6800061022c565b34801561032c57600080fd5b506101b961033b366004611925565b610875565b34801561034c57600080fd5b5061015f61035b36600461179c565b6108ad565b34801561036c57600080fd5b5061013561037b366004611a00565b6109be565b6101b961038e3660046118b2565b6109ec565b6101b96103a136600461179c565b610bcf565b3480156103b257600080fd5b506101b96103c1366004611846565b610cdd565b3480156103d257600080fd5b506601c6bf5263400061022c565b60006001600160e01b031982166380ac58cd60e01b148061041157506001600160e01b03198216635b5e139f60e01b145b8061042c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461044190611a33565b80601f016020809104026020016040519081016040528092919081815260200182805461046d90611a33565b80156104ba5780601f1061048f576101008083540402835291602001916104ba565b820191906000526020600020905b81548152906001019060200180831161049d57829003601f168201915b5050505050905090565b60006104cf82610d56565b506000908152600460205260409020546001600160a01b031690565b60006104f682610652565b9050806001600160a01b0316836001600160a01b031614156105695760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610585575061058581336109be565b6105f75760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610560565b6106018383610d7b565b505050565b6106103382610de9565b61062c5760405162461bcd60e51b815260040161056090611a6e565b610601838383610e47565b61060183838360405180602001604052806000815250610875565b6000818152600260205260408120546001600160a01b03168061042c5760405162461bcd60e51b815260040161056090611abc565b60006001600160a01b0382166106f15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610560565b506001600160a01b031660009081526003602052604090205490565b610715610fd1565b61071f6000611030565b565b60408051808201909152600080825260208201526000828152601060209081526040918290208251808401909352805460ff80821615158552919284019161010090910416600581111561077757610777611861565b600581111561078857610788611861565b90525092915050565b606060098260058111156107a7576107a7611861565b600681106107b7576107b7611aee565b0180546107c390611a33565b80601f01602080910402602001604051908101604052809291908181526020018280546107ef90611a33565b801561083c5780601f106108115761010080835404028352916020019161083c565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b50505050509050919050565b6007546001600160a01b031690565b60606001805461044190611a33565b610871338383611082565b5050565b61087f3383610de9565b61089b5760405162461bcd60e51b815260040161056090611a6e565b6108a78484848461114d565b50505050565b60606108b882610d56565b600082815260066020526040812080546108d190611a33565b80601f01602080910402602001604051908101604052809291908181526020018280546108fd90611a33565b801561094a5780601f1061091f5761010080835404028352916020019161094a565b820191906000526020600020905b81548152906001019060200180831161092d57829003601f168201915b50505050509050600061096860408051602081019091526000815290565b905080516000141561097b575092915050565b8151156109ad578082604051602001610995929190611b04565b60405160208183030381529060405292505050919050565b6109b684611180565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b66038d7ea4c68000341015610a1457604051636de126e160e01b815260040160405180910390fd5b6000816005811115610a2857610a28611861565b1480610a4557506001816005811115610a4357610a43611861565b145b80610a6157506002816005811115610a5f57610a5f611861565b145b610a7e576040516317af6e9f60e21b815260040160405180910390fd5b610a8a336008546111f4565b610b436008546009836005811115610aa457610aa4611861565b60068110610ab457610ab4611aee565b018054610ac090611a33565b80601f0160208091040260200160405190810160405280929190818152602001828054610aec90611a33565b8015610b395780601f10610b0e57610100808354040283529160200191610b39565b820191906000526020600020905b815481529060010190602001808311610b1c57829003601f168201915b505050505061120e565b6008546000908152601060205260409020805460ff19811682558290829061ffff1916610100836005811115610b7b57610b7b611861565b02179055506008547f0176f203df400d7bd5f1b1c9ef36c16709bf3b5d9fd35f000a6bae32393f66c333604051610bb291906117b5565b60405180910390a2600854610bc8906001611b49565b6008555050565b6601c6bf52634000341015610bf757604051636de126e160e01b815260040160405180910390fd5b6008548110610c1957604051638faa882f60e01b815260040160405180910390fd5b6000818152601060205260409020805460ff1615610c4a57604051632c35c34d60e01b815260040160405180910390fd5b8054600090610c6090610100900460ff16611299565b9050610c7a836009836005811115610aa457610aa4611861565b8154600160ff198216811784558291849161ffff1990911617610100836005811115610ca857610ca8611861565b021790555060405183907fb1409e84e4635d558ae9ee69e37ef8ea7ce6323b0af7b20b47186f3de7c26c1e90600090a2505050565b610ce5610fd1565b6001600160a01b038116610d4a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610560565b610d5381611030565b50565b610d5f816112eb565b610d535760405162461bcd60e51b815260040161056090611abc565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610db082610652565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610df583610652565b9050806001600160a01b0316846001600160a01b03161480610e1c5750610e1c81856109be565b806109b65750836001600160a01b0316610e35846104c4565b6001600160a01b031614949350505050565b826001600160a01b0316610e5a82610652565b6001600160a01b031614610ebe5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610560565b6001600160a01b038216610f205760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610560565b610f2b600082610d7b565b6001600160a01b0383166000908152600360205260408120805460019290610f54908490611b61565b90915550506001600160a01b0382166000908152600360205260408120805460019290610f82908490611b49565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b038681169182179092559151849391871691600080516020611c7e83398151915291a4505050565b33610fda610848565b6001600160a01b03161461071f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610560565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156110e05760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610560565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611158848484610e47565b61116484848484611308565b6108a75760405162461bcd60e51b815260040161056090611b78565b606061118b82610d56565b60006111a260408051602081019091526000815290565b905060008151116111c257604051806020016040528060008152506111ed565b806111cc84611415565b6040516020016111dd929190611b04565b6040516020818303038152906040525b9392505050565b610871828260405180602001604052806000815250611512565b611217826112eb565b61127a5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610560565b6000828152600660209081526040909120825161060192840190611665565b6000808260058111156112ae576112ae611861565b14156112bc57506003919050565b60018260058111156112d0576112d0611861565b14156112de57506004919050565b506005919050565b919050565b6000908152600260205260409020546001600160a01b0316151590565b60006001600160a01b0384163b1561140a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061134c903390899088908890600401611bca565b602060405180830381600087803b15801561136657600080fd5b505af1925050508015611396575060408051601f3d908101601f1916820190925261139391810190611c07565b60015b6113f0573d8080156113c4576040519150601f19603f3d011682016040523d82523d6000602084013e6113c9565b606091505b5080516113e85760405162461bcd60e51b815260040161056090611b78565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109b6565b506001949350505050565b6060816114395750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611463578061144d81611c24565b915061145c9050600a83611c55565b915061143d565b6000816001600160401b0381111561147d5761147d61190f565b6040519080825280601f01601f1916602001820160405280156114a7576020820181803683370190505b5090505b84156109b6576114bc600183611b61565b91506114c9600a86611c69565b6114d4906030611b49565b60f81b8183815181106114e9576114e9611aee565b60200101906001600160f81b031916908160001a90535061150b600a86611c55565b94506114ab565b61151c8383611545565b6115296000848484611308565b6106015760405162461bcd60e51b815260040161056090611b78565b6001600160a01b03821661159b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610560565b6115a4816112eb565b156115f05760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606401610560565b6001600160a01b0382166000908152600360205260408120805460019290611619908490611b49565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020611c7e833981519152908290a45050565b82805461167190611a33565b90600052602060002090601f01602090048101928261169357600085556116d9565b82601f106116ac57805160ff19168380011785556116d9565b828001600101855582156116d9579182015b828111156116d95782518255916020019190600101906116be565b506116e59291506116e9565b5090565b5b808211156116e557600081556001016116ea565b6001600160e01b031981168114610d5357600080fd5b60006020828403121561172657600080fd5b81356111ed816116fe565b60005b8381101561174c578181015183820152602001611734565b838111156108a75750506000910152565b60008151808452611775816020860160208601611731565b601f01601f19169290920160200192915050565b6020815260006111ed602083018461175d565b6000602082840312156117ae57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146112e657600080fd5b600080604083850312156117f357600080fd5b6117fc836117c9565b946020939093013593505050565b60008060006060848603121561181f57600080fd5b611828846117c9565b9250611836602085016117c9565b9150604084013590509250925092565b60006020828403121561185857600080fd5b6111ed826117c9565b634e487b7160e01b600052602160045260246000fd5b81511515815260208201516040820190600681106118a557634e487b7160e01b600052602160045260246000fd5b8060208401525092915050565b6000602082840312156118c457600080fd5b8135600681106111ed57600080fd5b600080604083850312156118e657600080fd5b6118ef836117c9565b91506020830135801515811461190457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561193b57600080fd5b611944856117c9565b9350611952602086016117c9565b92506040850135915060608501356001600160401b038082111561197557600080fd5b818701915087601f83011261198957600080fd5b81358181111561199b5761199b61190f565b604051601f8201601f19908116603f011681019083821181831017156119c3576119c361190f565b816040528281528a60208487010111156119dc57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611a1357600080fd5b611a1c836117c9565b9150611a2a602084016117c9565b90509250929050565b600181811c90821680611a4757607f821691505b60208210811415611a6857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60008351611b16818460208801611731565b835190830190611b2a818360208801611731565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611b5c57611b5c611b33565b500190565b600082821015611b7357611b73611b33565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611bfd9083018461175d565b9695505050505050565b600060208284031215611c1957600080fd5b81516111ed816116fe565b6000600019821415611c3857611c38611b33565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611c6457611c64611c3f565b500490565b600082611c7857611c78611c3f565b50069056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122082369a201529f701bb2b544f46831b3e7554dbfe40bc266a040841abb516725664736f6c63430008080033";

type DigitalNftConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DigitalNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DigitalNft__factory extends ContractFactory {
  constructor(...args: DigitalNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dogTokenUris: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DigitalNft> {
    return super.deploy(dogTokenUris, overrides || {}) as Promise<DigitalNft>;
  }
  override getDeployTransaction(
    dogTokenUris: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(dogTokenUris, overrides || {});
  }
  override attach(address: string): DigitalNft {
    return super.attach(address) as DigitalNft;
  }
  override connect(signer: Signer): DigitalNft__factory {
    return super.connect(signer) as DigitalNft__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DigitalNftInterface {
    return new utils.Interface(_abi) as DigitalNftInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DigitalNft {
    return new Contract(address, _abi, signerOrProvider) as DigitalNft;
  }
}
